set nocompatible              " 去除VI一致性,必须
filetype off                  " 必须

" 设置包括vundle和初始化相关的runtime path
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" 另一种选择, 指定一个vundle安装插件的路径
"call vundle#begin('~/some/path/here')

" 让vundle管理插件版本,必须
Plugin 'VundleVim/Vundle.vim'
" 插件YouCompleteMe用于vim补全功能
Plugin 'Valloric/YouCompleteMe'
" 插件状态栏美化
Plugin 'Lokaltog/vim-powerline'
" 插件cpp文件函数高亮
Plugin 'octol/vim-cpp-enhanced-highlight'

" 以下范例用来支持不同格式的插件安装.
" 请将安装插件的命令放在vundle#begin和vundle#end之间.
" Github上的插件
" 格式为 Plugin '用户名/插件仓库名'
"Plugin 'tpope/vim-fugitive'
" 来自 http://vim-scripts.org/vim/scripts.html 的插件
" Plugin '插件名称' 实际上是 Plugin 'vim-scripts/插件仓库名' 只是此处的用户名可以省略
"Plugin 'L9'
" 由Git支持但不再github上的插件仓库 Plugin 'git clone 后面的地址'
"Plugin 'git://git.wincent.com/command-t.git'
" 本地的Git仓库(例如自己的插件) Plugin 'file:///+本地插件仓库绝对路径'
"Plugin 'file:///home/gmarik/path/to/plugin'
" 插件在仓库的子目录中.
" 正确指定路径用以设置runtimepath. 以下范例插件在sparkup/vim目录下
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" 安装L9，如果已经安装过这个插件，可利用以下格式避免命名冲突
"Plugin 'ascenator/L9', {'name': 'newL9'}

" 你的所有插件需要在下面这行之前
call vundle#end()            " 必须
filetype plugin indent on    " 必须 加载vim自带和插件相应的语法和文件类型相关脚本
" 忽视插件改变缩进,可以使用以下替代:
"filetype plugin on

" 主动调用补全快捷键
let g:ycm_key_invoke_completion = '<C-a>'

" 背景主题
color darkblue

" 禁止光标闪烁
set gcr=a:block-blinkon0
" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R
" 禁止显示菜单和工具条
set guioptions-=m
set guioptions-=T
" 状态栏类型设置
set laststatus=2
" 设置状态栏主题风格
let g:Powerline_colorscheme='solarized256'

" 代码高亮
syntax enable
"允许用制定的高亮配色方案替换默认方案
syntax on
" 显示行号
set nu!
" 显示 bracets 配对
set showmatch
" 显示光标坐标
set ruler
" 高亮当前行列
set cursorline
"set cursorcolumn
" 高亮搜索结果
set hlsearch

" 启动时大小
set lines=55
set columns=120
winpos 0 0
" 不自动换行
set nolinebreak
" 禁止折行
set nowrap
" 历史数
set history=1024
" tab宽度
set tabstop=4
" tab自动缩进宽度
set shiftwidth=4
" 设置自动缩进
set ai
" 将tab转换为空格
"set expandtab
" 映射全选+复制 ctrl+a
"map <C-A> ggVGY
"map! <C-A> <Esc>ggVGY
" 让配置变更立即生效
autocmd BufWritePost $MYVIMRC source $MYVIMRC

"""""新文件标题""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新建.c,.h,.sh,.java文件，自动插入文件头 
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call AddTitle()" 
""定义函数SetTitle，自动插入文件头 
func AddTitle() 
	if &filetype == 'sh'
		call setline(1,"\##################################################")
		call append(line("."),"\# File Name: ".expand("%"))
		call append(line(".")+1, "\# Author: ommega3110")
		call append(line(".")+2, "\# mail: ommega3110@gmail.com")
		call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
		call append(line(".")+4, "\#########################################################################")
		call append(line(".")+5, "\#!/bin/bash")
		call append(line(".")+6, "") 
	else
		call setline(1, "\*************************************************************************") 
		call append(line("."), "\# File Name: ".expand("%")) 
		call append(line(".")+1, "\# Author: ommega3110")
		call append(line(".")+2, "\# mail: ommega3110@gmail.com")
		call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
		call append(line(".")+4, "\*************************************************************************")
		call append(line(".")+5, "")
	endif
	
	if &filetype == 'cpp'
		call append(line(".")+6, "#include<iostream>")
		call append(line(".")+7, "using namespace std;")
		call append(line(".")+8, "")
	endif
	if &filetype == 'c'
		call append(line(".")+6, "#include<stdio.h>")
		call append(line(".")+7, "")
	endif
	autocmd BufNewFile * normal G
endfunc




"
" 简要帮助文档
" :PluginList       - 列出所有已配置的插件
" :PluginInstall    - 安装插件,追加 `!` 用以更新或使用 :PluginUpdate
" :PluginSearch foo - 搜索 foo ; 追加 `!` 清除本地缓存
" :PluginClean      - 清除未使用插件,需要确认; 追加 `!` 自动批准移除未使用插件
"
" 查阅 :h vundle 获取更多细节和wiki以及FAQ

